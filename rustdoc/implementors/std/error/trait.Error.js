(function() {var implementors = {};
implementors["commitment_dlog"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"commitment_dlog/error/enum.CommitmentError.html\" title=\"enum commitment_dlog::error::CommitmentError\">CommitmentError</a>","synthetic":false,"types":["commitment_dlog::error::CommitmentError"]}];
implementors["kimchi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprError.html\" title=\"enum kimchi::circuits::expr::ExprError\">ExprError</a>","synthetic":false,"types":["kimchi::circuits::expr::ExprError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/circuits/lookup/index/enum.LookupError.html\" title=\"enum kimchi::circuits::lookup::index::LookupError\">LookupError</a>","synthetic":false,"types":["kimchi::circuits::lookup::index::LookupError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/circuits/polynomials/range_check/gadget/enum.GateError.html\" title=\"enum kimchi::circuits::polynomials::range_check::gadget::GateError\">GateError</a>","synthetic":false,"types":["kimchi::circuits::polynomials::range_check::gadget::GateError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/error/enum.ProverError.html\" title=\"enum kimchi::error::ProverError\">ProverError</a>","synthetic":false,"types":["kimchi::error::ProverError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/error/enum.VerifyError.html\" title=\"enum kimchi::error::VerifyError\">VerifyError</a>","synthetic":false,"types":["kimchi::error::VerifyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/error/enum.SetupError.html\" title=\"enum kimchi::error::SetupError\">SetupError</a>","synthetic":false,"types":["kimchi::error::SetupError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"kimchi/error/enum.VerifierIndexError.html\" title=\"enum kimchi::error::VerifierIndexError\">VerifierIndexError</a>","synthetic":false,"types":["kimchi::error::VerifierIndexError"]}];
implementors["mina_signer"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mina_signer/keypair/enum.KeypairError.html\" title=\"enum mina_signer::keypair::KeypairError\">KeypairError</a>","synthetic":false,"types":["mina_signer::keypair::KeypairError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"mina_signer/pubkey/enum.PubKeyError.html\" title=\"enum mina_signer::pubkey::PubKeyError\">PubKeyError</a>","synthetic":false,"types":["mina_signer::pubkey::PubKeyError"]}];
implementors["o1_utils"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"o1_utils/field_helpers/enum.FieldHelpersError.html\" title=\"enum o1_utils::field_helpers::FieldHelpersError\">FieldHelpersError</a>","synthetic":false,"types":["o1_utils::field_helpers::FieldHelpersError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()